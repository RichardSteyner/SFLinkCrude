@isTest
public class PaymentTrigger_Test {
    
    public static testmethod void test01(){
        Transaction_Number__c tn = Transaction_Number__c.getOrgDefaults();
        tn.Number_Crude__c = 1;
        tn.Number_Future__c = 1;
        insert tn;
        
        Pricebook2 pb1 = new Pricebook2(Name='Link Crude');
        insert pb1;
        Pricebook2 pb2 = new Pricebook2(Name='Link Future');
        insert pb2;
        
        Account buyer1 = new Account(Name='Test Buyer',Rate_N__c=0.05);
        insert buyer1;
        Account seller1 = new Account(Name='Test Seller',Rate_N__c=0.05);
        insert seller1;
        
        String recordTypeId = [Select Id, Name, sObjectType From RecordType WHERE Name = 'Link Futures Opportunities'].Id;
        Opportunity opp = new Opportunity(RecordTypeId=recordTypeId,Name='test',CloseDate=system.today(),StageName='Closed Won', AccountId=buyer1.Id, Seller__c=seller1.Id, Delivery__c = system.today(), Volume_Method__c = 'BPD', Volume_BBL_Day_New__c = 20, Price_Type__c = 'Formula Price', Cost_Per_Unit_formula__c = 'Conoco Posting');
        insert opp;

        Invoice__c inv = [Select Id, Account__c From Invoice__c LIMIT 1];
        Payment__c pay = new Payment__c(From__c=inv.Account__c,Transaction__c=opp.Id, Amount__c = 900);
        insert pay;
        Test.startTest();
        Payment__c child = new Payment__c(Invoice__c=inv.Id,From__c=inv.Account__c,Transaction__c=opp.Id, Distribuited_Amount__c = 100, Payment_Parent__c=pay.Id);
        insert child;
        ApexUtil.PaymentTrigger_Is_Enabled = true;
        child.Distribuited_Amount__c = 150;
        update child;
        ApexUtil.PaymentTrigger_Is_Enabled = true;
        delete child;
        Test.stopTest();
        
        Payment__c recordAssert = [Select Id, Undistributed_Amount__c From Payment__c WHERE Id=:pay.Id];
        system.assertEquals(900, recordAssert.Undistributed_Amount__c);
    }
    
    public static testmethod void test02(){
        Account acc = new Account(Name='Test Account',Rate_N__c=0.05);
        insert acc;
        Payment__c pay = new Payment__c(From__c=acc.Id);
        insert pay;
    }
}
